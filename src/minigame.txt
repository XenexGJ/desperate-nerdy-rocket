//für game_state.h

void startMini();
void updateMini();


//für game_state.cpp


//start Minigame
void GameState::startMini()
{
	m_game_state = STATE_MINI;
	
	setPlayerMovementDirection (DIRECTION_NONE);
	setPlayerLocation(sf::Vector2f (100,700));
}

//play Minigame
void GameState::updateMini()
{

	if(m_game_state==STATE_MENU)
	{
		return;
	}
	else if(m_game_state==STATE_SHOP)
	{
	}
	else if(m_game_state==STATE_PLAYING)
	{
	}
	else if(m_game_state==STATE_MINI)
	{
	// Update the player location
	sf::Vector2f delta;

	
	switch(m_player_direction)
	{
		case DIRECTION_LEFT:
		delta = sf::Vector2f(-5,0);
		break;

		case DIRECTION_RIGHT:
		delta = sf::Vector2f(5,0);
		break;

		case DIRECTION_UP:
		delta = sf::Vector2f(0,0);
		break;

		case DIRECTION_DOWN:
		delta = sf::Vector2f(0,0);
		break;

		default:
		delta = sf::Vector2f(0,0);
		break;
		}
		

	// Apply delta to the player position
	sf::Vector2f new_location(getPlayerLocation() + delta);

	// Check if new position is inside the game area
	if(new_location.x >= 0 && new_location.x + ROBOT_WIDTH <= m_size_x)
	{
		setPlayerLocation(new_location); // Update location
	}

	else
	{
		return;
		setGameState(2); //end Minigame and return to shop
	}
}

}



	

